/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'glair.vision.java-library-conventions'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

def artifactGroupId = 'ai.glair'
def artifactName = 'glair-vision'
def artifactVersion = '0.0.1-beta.1'
def artifactRepositoryUrl = 'https://github.com/glair-ai/glair-vision-java'
def artifactRepositoryGit = 'github.com/glair-ai/glair-vision-java.git'

jar {
    manifest {
        attributes 'Multi-Release': 'true'
    }
    archivesBaseName = artifactName
    version = artifactVersion
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = artifactGroupId
            artifactId = artifactName
            version = artifactVersion
            from components.java

            pom {
                name = artifactName
                description = 'GLAIR Vision SDK. Our SDK lets you make server-side HTTP requests from your server to GLAIR Vision API endpoints. It contains boilerplate code so you can get up and running in just a few lines of code..'
                url = artifactRepositoryUrl
                inceptionYear = '2023'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

//                developers {
//                    developer {
//                        id = 'vincentchuardi'
//                        name = 'Vincent Chuardi'
//                        email = 'vincent.chuardi@gdplabs.id'
//                    }
//                }

                scm {
                    connection = 'scm:git:git:' + artifactRepositoryGit
                    developerConnection = 'scm:git:ssh://' + artifactRepositoryGit
                    url = artifactRepositoryUrl
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}